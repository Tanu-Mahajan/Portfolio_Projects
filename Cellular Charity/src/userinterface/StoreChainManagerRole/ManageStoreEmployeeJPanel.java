/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.StoreChainManagerRole;

import Business.Employee.Employee;
import Business.Organization.Store;
import Business.Organization.RetailChain;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class ManageStoreEmployeeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageStoreEmployeeJPanel
     */
    private JPanel userProcessContainer;
    private RetailChain storeChain;
    private Store selectedStore;
    private Employee selectedEmployee;

    ManageStoreEmployeeJPanel(JPanel userProcessContainer, RetailChain storeChain) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.storeChain = storeChain;
        populateComboBox();
        this.jLabel4.setVisible(false);
        this.idJTextField.setVisible(false);
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        storesJTable = new javax.swing.JTable();
        storesJComboBox = new javax.swing.JComboBox();
        nameJTextField = new javax.swing.JTextField();
        addJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        updateJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        idJTextField = new javax.swing.JTextField();
        saveJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        jScrollPane1.setBackground(new java.awt.Color(51, 0, 51));
        jScrollPane1.setForeground(new java.awt.Color(0, 255, 50));

        storesJTable.setBackground(new java.awt.Color(204, 255, 204));
        storesJTable.setForeground(new java.awt.Color(51, 0, 51));
        storesJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(storesJTable);

        storesJComboBox.setBackground(new java.awt.Color(204, 255, 204));
        storesJComboBox.setForeground(new java.awt.Color(51, 0, 51));

        nameJTextField.setBackground(new java.awt.Color(204, 255, 204));
        nameJTextField.setForeground(new java.awt.Color(51, 0, 51));

        addJButton.setBackground(new java.awt.Color(204, 255, 204));
        addJButton.setForeground(new java.awt.Color(51, 0, 51));
        addJButton.setText("Create Employee");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(204, 255, 204));
        backJButton.setForeground(new java.awt.Color(51, 0, 51));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setForeground(new java.awt.Color(51, 0, 51));
        jLabel1.setText("Store:");

        jLabel2.setBackground(new java.awt.Color(204, 255, 204));
        jLabel2.setForeground(new java.awt.Color(51, 0, 51));
        jLabel2.setText("Name:");

        updateJButton.setBackground(new java.awt.Color(204, 255, 204));
        updateJButton.setForeground(new java.awt.Color(51, 0, 51));
        updateJButton.setText("Update Employee");
        updateJButton.setEnabled(false);
        updateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateJButtonActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(51, 0, 51));
        jLabel4.setText("ID:");

        idJTextField.setBackground(new java.awt.Color(204, 255, 204));
        idJTextField.setForeground(new java.awt.Color(51, 0, 51));

        saveJButton.setBackground(new java.awt.Color(204, 255, 204));
        saveJButton.setForeground(new java.awt.Color(51, 0, 51));
        saveJButton.setText("Save");
        saveJButton.setEnabled(false);
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(284, 284, 284)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(9, 9, 9)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(storesJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(backJButton)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(addJButton)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(saveJButton))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(26, 26, 26)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(idJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(updateJButton)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateJButton)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(storesJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(addJButton)
                    .addComponent(saveJButton))
                .addGap(260, 260, 260))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        boolean nameFlag = false;
        if (nameJTextField.getText().isEmpty()) {
            nameFlag = true;
            JOptionPane.showMessageDialog(null, "Please enter name", "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (!nameFlag) {
            Store store = (Store) storesJComboBox.getSelectedItem();

            String name = nameJTextField.getText();

            store.getEmployeeDirectory().createEmployee(name);
            populateTable();
            JOptionPane.showMessageDialog(null, "Store employee added successfully.");
            nameJTextField.setText("");
        }
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
        // TODO add your handling code here:
        boolean nameFlag = false;
        if (nameJTextField.getText().isEmpty()) {
            nameFlag = true;
            JOptionPane.showMessageDialog(null, "Please enter name", "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (!nameFlag) {
//            Store store = (Store) storesJComboBox.getSelectedItem();

            String name = nameJTextField.getText();
            selectedEmployee.setName(name);
            populateTable();
            JOptionPane.showMessageDialog(null, "Store employee added successfully.");
            nameJTextField.setText("");
            saveJButton.setEnabled(false);
            storesJComboBox.setEnabled(true);
            addJButton.setEnabled(true);
        }
    }//GEN-LAST:event_saveJButtonActionPerformed

    private void updateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = storesJTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showConfirmDialog(null, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            System.out.println(storesJTable.getValueAt(selectedRow, 0));
            int id =(int)  storesJTable.getValueAt(selectedRow, 0);
            String name =(String)  storesJTable.getValueAt(selectedRow, 1);
            for (Store store : storeChain.getStoreChain()) {
                for (Employee employee : store.getEmployeeDirectory().getEmployeeList()) {
                    if (employee.getId()==id){
                        selectedEmployee = employee;
                        selectedStore = store;
                        break;
                    }
                }                
            }
            nameJTextField.setText(String.valueOf(name));
            idJTextField.setText(String.valueOf(id));
            storesJComboBox.setSelectedItem(selectedStore);
            saveJButton.setEnabled(true);
            storesJComboBox.setEnabled(false);
            addJButton.setEnabled(false);
        }
    }//GEN-LAST:event_updateJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField idJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JButton saveJButton;
    private javax.swing.JComboBox storesJComboBox;
    private javax.swing.JTable storesJTable;
    private javax.swing.JButton updateJButton;
    // End of variables declaration//GEN-END:variables

    private void populateComboBox() {

        storesJComboBox.removeAll();
        for (Store store : storeChain.getStoreChain()) {
            storesJComboBox.addItem(store);
        }
             
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) storesJTable.getModel();

        model.setRowCount(0);
//        if(store.getEmployeeDirectory().getEmployeeList().isEmpty()){      
        try{
        Store store = (Store) storesJComboBox.getSelectedItem();

            for (Employee employee : store.getEmployeeDirectory().getEmployeeList()) {
                Object[] row = new Object[2];
                row[0] = employee.getId();
                row[1] = employee.getName();
                model.addRow(row);
            }
            if(model.getRowCount()>0){
                updateJButton.setEnabled(true);
            }
            }
        catch(Exception e){
            }
//        }
//        else{
//            JOptionPane.showMessageDialog(null, "Please create stores", "Error", JOptionPane.ERROR_MESSAGE);
//        }
    }
}
